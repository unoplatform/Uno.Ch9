<Page x:Class="Ch9.Views.ShowPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Ch9.Views"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:triggers="using:WindowsStateTriggers"
	  xmlns:toolkit="using:Uno.UI.Toolkit"
	  xmlns:lottie="using:Microsoft.Toolkit.Uwp.UI.Lottie"
	  xmlns:winui="using:Microsoft.UI.Xaml.Controls"
	  xmlns:xamarin="http://Uno.UI/xamarin"
	  xmlns:wasm="http://Uno.UI/wasm"
	  mc:Ignorable="xamarin wasm">

	<Page.Resources>
		<DataTemplate x:Key="ShowDetailsTemplate">
			<StackPanel Background="{StaticResource MaterialSurfaceBrush}"
						Padding="16">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<Grid Background="{StaticResource MaterialOnSurfaceMediumBrush}"
						  Height="64"
						  Width="64" />

					<!-- Image -->
					<Image Source="{Binding Image}"
						   Height="64"
						   Stretch="Uniform" />

					<StackPanel Grid.Column="1">

						<!-- Name -->
						<TextBlock Text="{Binding Name}"
								   Style="{StaticResource MaterialHeadline5}"
								   Margin="16,2,16,0" />

						<!-- Episodes count -->
						<TextBlock Style="{StaticResource MaterialSubtitle1}"
								   Margin="16,4,16,0">
												
                            <!-- Episodes Count --> 
                            <Run Text="{Binding Episodes, Converter={StaticResource EnumerableItemsCount}}" />

                             <!-- Episodes -->                         
						    <Run Text="Episodes"
								 x:Uid="ShowPage_Episodes" />
						</TextBlock>
					</StackPanel>
				</Grid>

				<!--Show description-->
				<TextBlock Text="{Binding Description}"
						   Style="{StaticResource MaterialBody1}"
						   Margin="0,15,16,0"
						   Grid.Row="2" />
			</StackPanel>
		</DataTemplate>
	</Page.Resources>

	<Grid Background="{ThemeResource AppBackgroundBrush}">

		<!--           WIDE                     NARROW             NARROW 
                                            (no selection)       (selection)
        
            | - - - - - - - - - - - -|     | - - - - - - |     | - - - - - - | 
            |       CommandBar       |     |  CommandBar |     |             |
            | - - - - - - - - - - - -|     | - - - - - - |     |   Content   |
			|         Header         |     |    Header   |     |             |
			| - - - - - - - - - - - -|     | - - - - - - |     |             |
			|    List   |   Content  |     |     List    |     |             |
            | - - - - - - - - - - - -|     | - - - - - - |     | - - - - - - | 
        -->

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition x:Name="LeftColumn"
							  Width="*" />
			<ColumnDefinition x:Name="RightColumn"
							  Width="0" />
		</Grid.ColumnDefinitions>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup CurrentStateChanged="VisualStateGroupCurrentStateChanged">
				<VisualState x:Name="WideAndSelected">
					<VisualState.StateTriggers>
						<triggers:CompositeStateTrigger Operator="And">
							<triggers:AdaptiveTrigger MinWindowWidth="800" />
							<StateTrigger IsActive="{x:Bind ViewModel.Show.SelectedEpisode, Converter={StaticResource NullToFalse}, Mode=OneWay}" />
						</triggers:CompositeStateTrigger>
					</VisualState.StateTriggers>

					<VisualState.Setters>
						<Setter Target="LeftColumn.Width"
								Value="375" />
						<Setter Target="RightColumn.Width"
								Value="*" />
						<Setter Target="EpisodePresenter.Column"
								Value="1" />
						<Setter Target="EpisodePresenter.ColumnSpan"
								Value="1" />
						<Setter Target="ModalBackground.Visibility"
								Value="Collapsed" />
						<Setter Target="DismissButton.Visibility"
								Value="Collapsed" />
						<Setter Target="ShowDetails.Visibility"
								Value="Visible" />
						<Setter Target="EpisodeList.Padding"
								Value="12,0" />
						<Setter Target="EpisodeList.HeaderTemplate"
								Value="{StaticResource EmptyListViewHeaderTemplate}" />
						<Setter Target="CommandBar.Visibility"
								Value="Collapsed" />
					</VisualState.Setters>
				</VisualState>

				<VisualState x:Name="WideAndNotSelected">
					<VisualState.StateTriggers>
						<triggers:CompositeStateTrigger Operator="And">
							<triggers:AdaptiveTrigger MinWindowWidth="800" />
							<StateTrigger IsActive="{x:Bind ViewModel.Show.SelectedEpisode, Converter={StaticResource NullToTrue}, Mode=OneWay}" />
						</triggers:CompositeStateTrigger>
					</VisualState.StateTriggers>

					<VisualState.Setters>
						<Setter Target="LeftColumn.Width"
								Value="375" />
						<Setter Target="RightColumn.Width"
								Value="*" />
						<Setter Target="EpisodePresenter.Column"
								Value="1" />
						<Setter Target="EpisodePresenter.ColumnSpan"
								Value="1" />
						<Setter Target="ShowDetails.Visibility"
								Value="Visible" />
						<Setter Target="ModalBackground.Visibility"
								Value="Collapsed" />
						<Setter Target="DismissButton.Visibility"
								Value="Collapsed" />
						<Setter Target="EpisodeList.Padding"
								Value="12,0" />
						<Setter Target="EpisodeList.HeaderTemplate"
								Value="{StaticResource EmptyListViewHeaderTemplate}" />
						<Setter Target="CommandBar.Visibility"
								Value="Collapsed" />
					</VisualState.Setters>
				</VisualState>

				<VisualState x:Name="NarrowAndSelected">
					<VisualState.StateTriggers>
						<triggers:CompositeStateTrigger Operator="And">
							<StateTrigger IsActive="{x:Bind ViewModel.Show.SelectedEpisode, Converter={StaticResource NullToFalse}, Mode=OneWay}" />
						</triggers:CompositeStateTrigger>
					</VisualState.StateTriggers>

					<VisualState.Setters>
						<Setter Target="EpisodePresenter.Row"
								Value="1" />
						<Setter Target="EpisodePresenter.RowSpan"
								Value="2" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<Grid Height="40"
			  x:Name="CommandBar"
			  Padding="52,0,0,0"
			  Grid.ColumnSpan="2">
		</Grid>

		<!-- Show details -->
		<Grid DataContext="{Binding Show}"
			  Visibility="{Binding Show.IsSuccess, Converter={StaticResource TrueToVisible}, FallbackValue=Visible}"
			  Grid.Row="1"
			  Grid.Column="0"
			  Grid.ColumnSpan="2">
			<ContentControl x:Name="ShowDetails"
							Content="{Binding Show.Result}"
							ContentTemplate="{StaticResource ShowDetailsTemplate}"
							HorizontalContentAlignment="Stretch"
							Visibility="Collapsed" />
		</Grid>

		<!-- Episodes list -->
		<Grid DataContext="{Binding Show}"
			  Visibility="{Binding Show.IsSuccess, Converter={StaticResource TrueToVisible}, FallbackValue=Visible}"
			  Grid.Row="2"
			  Grid.Column="0">

			<!-- List of episodes -->
			<ListView x:Name="EpisodeList"
					  ItemsSource="{Binding Episodes}"
					  ItemTemplate="{StaticResource EpisodeItemTemplate}"
					  Header="{Binding Show.Result}"
					  HeaderTemplate="{StaticResource ShowDetailsTemplate}"
					  SelectionMode="Single"
					  SelectedItem="{Binding SelectedEpisode, Mode=TwoWay}"
					  ItemContainerStyle="{StaticResource EpisodeListViewItemStyle}" />

			<!-- Empty List Message -->
			<TextBlock Visibility="{Binding Episodes, Converter={StaticResource EnumerableHasAnyToCollapsed}, FallbackValue=Collapsed}"
					   Text="Nothing to show"
					   x:Uid="MainPage_EmptyListMessage"
					   Style="{StaticResource MaterialHeadline6}"
					   TextAlignment="Center"
					   VerticalAlignment="Center"
					   Margin="16,0" />
		</Grid>

		<!-- No Selection -->
		<Grid DataContext="{Binding Show}"
			  Visibility="{Binding SelectedEpisode, Converter={StaticResource NullToVisible}}"
			  Background="{StaticResource MaterialBackgroundBrush}"
			  Grid.Row="2"
			  Grid.Column="1">

			<StackPanel VerticalAlignment="Center">

				<!-- Image -->
				<Image Source="ms-appx:///Assets/Ch9Emoji.png"
					   Stretch="Uniform"
					   Width="280"
					   HorizontalAlignment="Center" />

				<!-- Title -->
				<TextBlock Text="No video selected"
						   x:Uid="MainPage_NoSelectionTitle"
						   Style="{StaticResource MaterialHeadline6}"
						   TextAlignment="Center"
						   Margin="32,16,32,0" />

				<!-- Message -->
				<TextBlock Text="Channel 9 videos are both informative and entertaining, give them a try by selecting one from the list!"
						   x:Uid="MainPage_NoSelectionMessage"
						   Style="{StaticResource MaterialBody1}"
						   TextAlignment="Center"
						   MaxWidth="380"
						   Margin="32,8,32,0" />
			</StackPanel>
		</Grid>

		<!-- Selected Episode -->
		<Grid x:Name="EpisodePresenter"
			  DataContext="{Binding Show}"
			  Visibility="{Binding SelectedEpisode, Converter={StaticResource NullToCollapsed}, FallbackValue=Collapsed}"
			  toolkit:VisibleBoundsPadding.PaddingMask="Top"
			  Background="{StaticResource MaterialBackgroundBrush}"
			  Grid.Row="2"
			  Grid.Column="0">

			<!-- Modal background -->
			<Border x:Name="ModalBackground"
					Background="{StaticResource MaterialBackgroundBrush}" />

			<!-- Presenter -->
			<ScrollViewer>

				<!-- Episode -->
				<local:EpisodeContent DataContext="{Binding SelectedEpisode}"
									  VerticalAlignment="Top" />
			</ScrollViewer>

			<Grid>

				<!-- Dismiss button -->
				<Button x:Name="DismissButton"
						Command="{Binding DismissSelectedEpisode}"
						Style="{StaticResource MediaPlayerButtonStyle}"
						HorizontalAlignment="Right"
						VerticalAlignment="Top"
						Margin="8,8,16,8">
					<Path Style="{StaticResource CloseIconPath}"
						  Data="M21.976 2.438L23.563 4.024 14.586 13 23.563 21.976 21.976 23.563 13 14.586 4.024 23.563 2.438 21.976 11.413 13 2.438 4.024 4.024 2.438 13 11.413z"
						  VerticalAlignment="Center" />
				</Button>
			</Grid>
		</Grid>

		<!-- Error -->
		<Grid DataContext="{Binding Show}"
			  Visibility="{Binding Show.IsFaulted, Converter={StaticResource TrueToVisible}, FallbackValue=Collapsed}"
			  Background="{StaticResource MaterialBackgroundBrush}"
			  Grid.Row="2"
			  Grid.RowSpan="2"
			  Grid.Column="0"
			  Grid.ColumnSpan="2">

			<StackPanel VerticalAlignment="Center">

				<!-- Image -->
				<Image Source="{Binding Show.IsInternetFaulted, Converter={StaticResource HasNetworkErrorToErrorImage}}"
					   Stretch="None"
					   HorizontalAlignment="Center"
					   Margin="{Binding Show.IsInternetFaulted, Converter={StaticResource HasNetworkErrorToErrorImageMargin}}" />

				<!-- Title -->
				<TextBlock Text="{Binding Show.IsInternetFaulted, Converter={StaticResource HasNetworkErrorToErrorTitle}}"
						   Style="{StaticResource MaterialHeadline6}"
						   TextAlignment="Center"
						   Margin="40,12,40,0" />

				<!-- Message -->
				<TextBlock Text="{Binding Show.IsInternetFaulted, Converter={StaticResource HasNetworkErrorToErrorMessage}}"
						   Style="{StaticResource MaterialBody1}"
						   TextAlignment="Center"
						   Margin="40,8,40,0" />

				<!-- Reload button -->
				<Button Content="Try Again"
						x:Uid="MainPage_ErrorStateButtonLabel"
						Command="{Binding ReloadPage}"
						Style="{StaticResource MaterialContainedButtonStyle}"
						HorizontalAlignment="Center"
						Margin="40,40,40,0" />
			</StackPanel>
		</Grid>

		<!-- Loading -->
		<Grid Background="{ThemeResource AppBackgroundBrush}"
			  DataContext="{Binding Show}"
			  Visibility="{Binding Show.IsExecuting, Converter={StaticResource TrueToVisible}, FallbackValue=Collapsed}"
			  Grid.Row="1"
			  Grid.RowSpan="2"
			  Grid.Column="0"
			  Grid.ColumnSpan="2">
			<StackPanel VerticalAlignment="Center"
						HorizontalAlignment="Center">

				<!-- Loading Animation -->
				<xamarin:Grid>
					<winui:AnimatedVisualPlayer x:Name="player"
												AutoPlay="true"
												Height="120">
						<lottie:LottieVisualSource UriSource="ms-appx:///Assets/Animations/loading_animation_data.json" />
					</winui:AnimatedVisualPlayer>
				</xamarin:Grid>

				<win:Image Source="ms-appx:///Assets/Ch9Emoji.png"
						   Stretch="Uniform"
						   Height="120"
						   HorizontalAlignment="Center" />

				<!-- Loading Message -->
				<TextBlock Text="Loading..."
						   x:Uid="MainPage_Loading"
						   Style="{StaticResource MaterialHeadline5}"
						   TextAlignment="Center" />
			</StackPanel>
		</Grid>
	</Grid>
</Page>
