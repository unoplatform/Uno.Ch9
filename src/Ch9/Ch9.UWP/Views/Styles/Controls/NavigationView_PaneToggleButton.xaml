<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:ios="http://uno.ui/ios"
					xmlns:android="http://uno.ui/android"
					xmlns:wasm="http://uno.ui/wasm"
					xmlns:not_win="http://uno.ui/not_win"
					xmlns:xamarin="http://uno.ui/xamarin"
					xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:converters="using:Uno.Material.Converters"
					xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives"
					xmlns:material="using:Uno.Material.Controls"
					mc:Ignorable="d ios android wasm not_win xamarin primitives">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Application/Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!-- PaneToggleButton Style-->
	<Style x:Key="MaterialPaneToggleButtonStyle"
		   TargetType="Button">
		<Setter Property="FontSize"
				Value="16" />
		<Setter Property="FontFamily"
				Value="{StaticResource SymbolThemeFontFamily}" />
		<Setter Property="MinHeight"
				Value="{StaticResource PaneToggleButtonHeight}" />
		<Setter Property="MinWidth"
				Value="52" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Background"
				Value="{StaticResource NavDrawersBackgroundBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource NavDrawersTextBrush}" />
		<Setter Property="Content"
				Value="&#xE700;" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  Height="{TemplateBinding MinHeight}"
						  Width="{TemplateBinding MinWidth}"
						  Margin="{TemplateBinding Padding}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Checked">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource ToggleButtonBackgroundChecked}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource ToggleButtonForegroundChecked}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPressed" />
								<VisualState x:Name="CheckedDisabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Width="{TemplateBinding MinWidth}"
							  HorizontalAlignment="Left">
							<Viewbox x:Name="IconHost"
									 Width="16"
									 Height="16"
									 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									 AutomationProperties.AccessibilityView="Raw">

								<ContentPresenter x:Name="ContentPresenter"
												  Content="{TemplateBinding Content}"
												  FontSize="{TemplateBinding FontSize}"
												  AutomationProperties.AccessibilityView="Raw" />
							</Viewbox>
						</Grid>

						<Border x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Width="{TemplateBinding MinWidth}"
								HorizontalAlignment="Left"
								android:Visibility="Collapsed"
								Opacity="0" />

						<Border x:Name="PressedOverlay"
								Background="{StaticResource MaterialOnSurfacePressedBrush}"
								Width="{TemplateBinding MinWidth}"
								HorizontalAlignment="Left"
								Opacity="0" />

						<material:Ripple Feedback="{StaticResource RippleOnSurfaceColorBrush}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialPaneBackArrowToggleButtonStyle"
		   TargetType="Button">
		<Setter Property="FontSize"
				Value="16" />
		<Setter Property="FontFamily"
				Value="{StaticResource SymbolThemeFontFamily}" />
		<Setter Property="MinHeight"
				Value="{StaticResource PaneToggleButtonHeight}" />
		<Setter Property="MinWidth"
				Value="52" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{StaticResource NavDrawersTextBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="LayoutRoot"
						  Height="{TemplateBinding MinHeight}"
						  Width="{TemplateBinding MinWidth}"
						  Margin="{TemplateBinding Padding}"
						  Background="{TemplateBinding Background}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Checked">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource ToggleButtonBackgroundChecked}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource ToggleButtonForegroundChecked}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPressed" />
								<VisualState x:Name="CheckedDisabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Width="16"
							  Height="16"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

							<Path Data="M8,0 L9.4,1.4 L3.8,7 L16,7 L16,9 L3.8,9 L9.4,14.6 L8,16 L0,8 z"
								  Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
								  Width="16"
								  Height="16"
								  Stretch="Fill"
								  UseLayoutRounding="False" />
						</Grid>

						<material:Ripple Feedback="{StaticResource RippleOnSurfaceColorBrush}"
										 FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
										 AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<converters:FromOpenToCustomValueConverter x:Name="OpenToPaneButtonStyle"
											   ValueIfOpen="{StaticResource MaterialPaneToggleButtonStyle}"
											   ValueIfClosed="{StaticResource MaterialPaneToggleButtonStyle}" />

</ResourceDictionary>
